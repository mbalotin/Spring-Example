<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com</groupId>
  <artifactId>spring_example</artifactId>
  <name>Spring Example</name>
  <version>1.0</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>io.spring.platform</groupId>
    <artifactId>platform-bom</artifactId>
    <version>1.1.1.RELEASE</version>
    <relativePath />
  </parent>

  <properties>
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.compiler.source>1.7</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.7</java.version>
  </properties>

  <dependencies>

    <!-- Spring Data dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Spring Metrics dependencies -->
    <!-- http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- Spring Security dependencies -->
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <!-- Spring AOP + AspectJ -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-instrument</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <!--     Provided (uncomment for embedded war support)
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>-->

    <!-- Java Mail API -->
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.5.0-b01</version>
    </dependency>

    <!-- Commons dependencies  -->
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.4.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <!-- Ehcache dependencies -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-jcache</artifactId>
      <version>1.5.0-0.5</version>
    </dependency>

    <!-- Markdown to Html dependencies -->
    <dependency>
      <groupId>org.commonjava.googlecode.markdown4j</groupId>
      <artifactId>markdown4j</artifactId>
      <version>2.2-cj-1.0</version>
    </dependency>

    <!-- Lombok dependencies -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

    <!-- Mysql dependencies -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <!-- Thymeleaf dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>nz.net.ultraq.thymeleaf</groupId>
      <artifactId>thymeleaf-layout-dialect</artifactId>
    </dependency>

    <!-- WebJars dependencies -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>3.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>2.1.3</version>
    </dependency>

  </dependencies>

  <build>

    <!-- Add Resources -->
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>${basedir}/src/main/webapp/</directory>
        <targetPath>webapp</targetPath>
        <filtering>false</filtering>
        <excludes>
          <!-- These file are excluded because they need to be in classpath:/public folder -->
          <exclude>resources/</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/webapp/resources</directory>
        <targetPath>public</targetPath>
        <filtering>false</filtering>
        <excludes>
          <!-- These file are excluded because they are compiled and minified by other plugins -->
          <exclude>**/*.coffee</exclude>
          <exclude>**/*.scss</exclude>
        </excludes>
      </resource>

    </resources>

    <plugins>
      <!-- Spring boot with Maven -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- Add Main Class -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>com.Application</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Compiler and Minifier for Coffeescript-->
      <plugin>
        <groupId>com.theoryinpractise</groupId>
        <artifactId>coffee-maven-plugin</artifactId>
        <version>1.4.13</version>
        <configuration>
          <coffeeJoinSets>
            <joinSet>
              <id>main</id>
              <coffeeOutputDirectory>${project.build.outputDirectory}/public/js</coffeeOutputDirectory>
              <fileSet>
                <directory>${basedir}/src/main/webapp/resources/js</directory>
                <includes>
                  <include>**/*.coffee</include>
                </includes>
              </fileSet>
            </joinSet>
          </coffeeJoinSets>
          <minifiedFile>${project.build.outputDirectory}/public/js/main.min.js</minifiedFile>
          <setOfFilesToMinify>
            <directory>${project.build.outputDirectory}/public/js</directory>
            <includes>
              <include>**/*.js</include>
            </includes>
          </setOfFilesToMinify>
        </configuration>
        <executions>
          <execution>
            <id>coffee</id>
            <goals>
              <goal>coffee</goal>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Compiler for SCSS  -->
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
            <configuration>
              <sassSourceDirectory>${basedir}/src/main/webapp/resources/css</sassSourceDirectory>
              <destination>${project.build.outputDirectory}/public/css</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Monyfier for CSS -->
      <plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>1.7.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>minify</goal>
            </goals>
            <configuration>
              <webappSourceDir>${project.build.outputDirectory}/public</webappSourceDir>
              <cssSourceDir>css</cssSourceDir>
              <webappTargetDir>${project.build.outputDirectory}/public</webappTargetDir>
              <cssTargetDir>css</cssTargetDir>
              <cssFinalFile>main.min.css</cssFinalFile>
              <nosuffix>true</nosuffix>
              <cssSourceIncludes>
                <include>*.css</include>
              </cssSourceIncludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Compile time weaver for Configurable classes -->
      <!-- https://palesz.wordpress.com/2011/12/03/howto-maven-lombok-and-aspectj-together/ -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <showWeaveInfo>true</showWeaveInfo>
              <forceAjcCompile>true</forceAjcCompile>
              <sources/>
              <weaveDirectories>
                <weaveDirectory>${project.build.outputDirectory}</weaveDirectory>
              </weaveDirectories>
              <aspectLibraries>
                <aspectLibrary>
                  <groupId>org.springframework</groupId>
                  <artifactId>spring-aspects</artifactId>
                </aspectLibrary>
              </aspectLibraries>
              <source>${java.version}</source>
              <target>${java.version}</target>
              <complianceLevel>${java.version}</complianceLevel>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy keystore to target -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy file="README.md" tofile="${project.build.outputDirectory}/markdown/README.md"/>
                <copy file="keystore.jks" tofile="${project.build.directory}/keystore.jks"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>

    <!-- Add Local repositories -->
    <!--    <repository>
      <id>project.local</id>
      <name>project</name>
      <url>file://${project.basedir}/repo</url>
    </repository>-->

  </repositories>

</project>
