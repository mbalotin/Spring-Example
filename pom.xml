<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
				 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com</groupId>
	<artifactId>spring_example</artifactId>
	<name>Spring Example</name>
	<description>Spring Example for every project!</description>
	<version>1.0</version>
	<packaging>war</packaging>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-bom</artifactId>
		<version>2.0.7.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>

		<!-- This is used by spring boot to set java version and Main class-->
		<java.version>1.8</java.version>
		<start-class>com.Application</start-class>

		<!-- Dependency versions -->
		<rest-assured-version>2.9.0</rest-assured-version>
		<bootstrap-version>3.3.7</bootstrap-version>
		<jquery-version>3.1.0</jquery-version>
		<angularjs-version>1.5.7</angularjs-version>
		<commons-validator-version>1.5.1</commons-validator-version>
	</properties>

	<dependencies>
		<!-- Spring Boot Starter Core dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<!-- Exclude default log in favor of log4j -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Boot Test dependencies http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-testing.html -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured-version}</version>
		</dependency>

		<!-- Spring MCV dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Metrics dependencies -->
		<!-- http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Security dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Spring DevTools dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Log4j dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j</artifactId>
		</dependency>

		<!-- Thymeleaf dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>

		<!-- Mail dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- WebJars dependencies -->
		<!-- Want AngularJS? https://github.com/dsyer/spring-security-angular-->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap-version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery-version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>angularjs</artifactId>
			<version>${angularjs-version}</version>
		</dependency>

		<!-- Commons dependencies  -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>${commons-validator-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- Ehcache dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>

		<!-- Lombok dependencies -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- Database dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

	</dependencies>

	<build>
		<!-- Set final artifact name -->
		<finalName>${project.artifactId}</finalName>

		<!-- Add Resources -->
		<resources>
			<!-- Basic Resources-->
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>

			<!-- WebApp Resources-->
			<resource>
				<directory>${basedir}/src/main/webapp</directory>
				<filtering>false</filtering>
				<excludes>
					<!-- These file are excluded because they are compiled and minified by other plugins -->
					<exclude>**/*.coffee</exclude>
					<exclude>**/*.scss</exclude>
				</excludes>
			</resource>

			<!-- Keystore.jks and external application.properties Resources -->
			<resource>
				<directory>${basedir}</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>false</filtering>
				<includes>
					<include>keystore.jks</include>
					<include>application.properties</include>
				</includes>
			</resource>

		</resources>

		<plugins>
			<!-- Package as an executable jar or war. This does most of the work for us. -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Compiler and Minifier for Coffeescript-->
			<plugin>
				<groupId>com.theoryinpractise</groupId>
				<artifactId>coffee-maven-plugin</artifactId>
				<version>1.4.16</version>
				<configuration>
					<coffeeOutputDirectory>${project.build.outputDirectory}/resources/js</coffeeOutputDirectory>
					<compileIndividualFiles>false</compileIndividualFiles>
					<coffeeJoinSets>
						<joinSet>
							<id>main</id> <!-- This is also the name of the resulting file -->
							<fileSet>
								<directory>${basedir}/src/main/webapp/resources/js</directory>
								<includes>
									<include>**/*.coffee</include>
								</includes>
							</fileSet>
						</joinSet>
					</coffeeJoinSets>
					<minifiedFile>${project.build.outputDirectory}/resources/js/main.min.js</minifiedFile>
					<setOfFilesToMinify>
						<directory>${project.build.outputDirectory}/resources/js</directory>
						<includes>
							<include>**/*.js</include>
						</includes>
					</setOfFilesToMinify>
				</configuration>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>coffee</goal>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Compiler for SCSS  -->
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>sass-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>update-stylesheets</goal>
						</goals>
						<configuration>
							<sassSourceDirectory>${basedir}/src/main/webapp/resources/css</sassSourceDirectory>
							<destination>${project.build.outputDirectory}/resources/css</destination>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Minifier for CSS -->
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>1.7.4</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>minify</goal>
						</goals>
						<configuration>
							<webappSourceDir>${project.build.outputDirectory}/resources</webappSourceDir>
							<webappTargetDir>${project.build.outputDirectory}/resources</webappTargetDir>
							<nosuffix>true</nosuffix>

							<!-- CSS Minify Options -->
							<cssSourceDir>css</cssSourceDir>
							<cssTargetDir>css</cssTargetDir>
							<cssFinalFile>main.min.css</cssFinalFile>
							<cssSourceIncludes>
								<include>*.css</include>
							</cssSourceIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Compile time weaver for Configurable classes - http://mojo.codehaus.org/aspectj-maven-plugin/usage.html -->
			<!-- https://palesz.wordpress.com/2011/12/03/howto-maven-lombok-and-aspectj-together/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version> <!-- This version is set by Spring Boot -->
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<showWeaveInfo>true</showWeaveInfo>
							<forceAjcCompile>true</forceAjcCompile>
							<sources/>
							<weaveDirectories>
								<weaveDirectory>${project.build.outputDirectory}</weaveDirectory>
							</weaveDirectories>
							<aspectLibraries>
								<aspectLibrary>
									<groupId>org.springframework</groupId>
									<artifactId>spring-aspects</artifactId>
								</aspectLibrary>
							</aspectLibraries>
							<encoding>UTF-8</encoding>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<complianceLevel>${java.version}</complianceLevel>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Spring docker plugin https://spring.io/guides/gs/spring-boot-docker/ -->
			<!-- docker run -p 8080:8080 -t spring_example -->
			<!--			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<configuration>
					<imageName>${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
							<include>keystore.jks</include>
							<include>application.properties</include>
						</resource>
					</resources>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->

		</plugins>
	</build>


	<repositories>

		<!-- Add Local repositories -->
		<!-- EXAMPLE: https://devcenter.heroku.com/articles/local-maven-dependencies-->
		<!--    <repository>
			<id>project.local</id>
			<name>project</name>
			<url>file://${basedir}/repo</url>
		</repository>-->

	</repositories>

</project>
